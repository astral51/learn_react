{"version":3,"file":"static/js/459.6f458b09.chunk.js","mappings":"wMACA,GAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,oBAAsB,qCAAqC,YAAc,6BAA6B,iBAAmB,kCAAkC,SAAW,0BAA0B,QAAU,yBAAyB,oBAAsB,qCAAqC,kBAAoB,mCAAmC,qBAAuB,sCAAsC,wBAA0B,0C,SCiBhlB,EAfmB,SAACA,GACnB,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAASC,UACxBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACPH,UAAW,SAAAI,GAAU,OAAIA,EAAWC,SAAWJ,EAAAA,YAAWK,CAAS,EACnEC,GAAI,YAAcT,EAAMU,GAAGN,UAC3BO,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAAA,oBAAsBC,SAAA,EACrCH,EAAAA,EAAAA,KAAA,OAAKW,IAAI,yDAAyDC,IAAI,UACtEZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAcC,SAAEJ,EAAMc,aAK3C,ECHA,EAVgB,SAACd,GAChB,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,UACzBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,gBAAkBC,SAChCJ,EAAMe,WAIX,E,UCJMC,EAAc,SAAChB,GAEpB,IAAAiB,GAA+CC,EAAAA,EAAAA,MAAvCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAOhC,OACCpB,EAAAA,EAAAA,KAAA,OAAAG,UACCO,EAAAA,EAAAA,MAAA,QAAMT,UAAWC,EAAAA,oBAAuBmB,SAAUF,GAPpD,SAAkBG,GACjBvB,EAAMwB,YAAYD,EAAKE,SACvBJ,EAAW,UACZ,IAI2EjB,SAAA,EACxEH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAyB,EAAAA,EAAAA,GAAA,CACCxB,UAAWC,EAAAA,kBACXwB,YAAa,yBACTR,EAAS,gBAIhBlB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,wBAA2ByB,KAAK,SAAQxB,SAAC,aAOhE,EA0BA,EAtBgB,SAACJ,GAChB,IAAI6B,EAAkB7B,EAAM8B,QAAQC,KAAI,SAAAC,GAAI,OAAI/B,EAAAA,EAAAA,KAACgC,EAAU,CAACvB,GAAIsB,EAAKtB,GAAII,KAAMkB,EAAKlB,MAAWkB,EAAKtB,GAAK,IACrGwB,EAAmBlC,EAAMmC,SAASJ,KAAI,SAAAC,GAAI,OAAI/B,EAAAA,EAAAA,KAACmC,EAAO,CAAC1B,GAAIsB,EAAKtB,GAAIK,QAASiB,EAAKjB,SAAciB,EAAKtB,GAAK,IAE9G,OACCC,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAAA,QAAUC,SAAA,EAEzBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,cAAgBC,SAC9ByB,KAGFlB,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAAA,iBAAmBC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAWC,SACzB8B,KAEFjC,EAAAA,EAAAA,KAACe,EAAW,CAACQ,YAAaxB,EAAMwB,mBAKpC,E,8BC5CIa,EAAqB,CACxBb,YAAAA,EAAAA,GAGD,GAAec,EAAAA,EAAAA,KACdC,EAAAA,EAAAA,KAZqB,SAACC,GACtB,MAAO,CACNV,QAASU,EAAMC,YAAYX,QAC3BK,SAAUK,EAAMC,YAAYN,SAE9B,GAO0BE,GACzBK,EAAAA,EAFD,CAGEC,E","sources":["webpack://learn_react/./src/components/dialogs/dialogs.module.css?c5d1","components/dialogs/dialogItem/dialogItem.jsx","components/dialogs/message/message.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__kUQ6-\",\"dialogs_items\":\"dialogs_dialogs_items__E-lHw\",\"dialog\":\"dialogs_dialog__WwbX9\",\"active\":\"dialogs_active__xx4ao\",\"dialog_link_wrapper\":\"dialogs_dialog_link_wrapper__s1wzb\",\"dialog_name\":\"dialogs_dialog_name__QBgfo\",\"messages_wrapper\":\"dialogs_messages_wrapper__x-OPJ\",\"messages\":\"dialogs_messages__zvwH-\",\"message\":\"dialogs_message__8SSMg\",\"new_message_wrapper\":\"dialogs_new_message_wrapper__hxuyD\",\"new_message_input\":\"dialogs_new_message_input__iewn5\",\"new_message_textarea\":\"dialogs_new_message_textarea__EBbbn\",\"send_new_message_button\":\"dialogs_send_new_message_button__1RpnV\"};","import { NavLink } from 'react-router-dom';\r\nimport s from '../dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={s.dialog}>\r\n\t\t\t<NavLink \r\n\t\t\t\tclassName={dialogData => dialogData.isActive ? s.active : undefined}\r\n\t\t\t\tto={\"/dialogs/\" + props.id}>\r\n\t\t\t\t<div className={s.dialog_link_wrapper}>\r\n\t\t\t\t\t<img src=\"https://cdn.onlinewebfonts.com/svg/download_415637.png\" alt=\"none\" />\r\n\t\t\t\t\t<div className={s.dialog_name}>{props.name}</div> \r\n\t\t\t\t</div>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DialogItem;","import s from '../dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t<div className={s.message_wrapper}>\r\n\t\t\t\t{props.message}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './dialogItem/dialogItem';\r\nimport s from './dialogs.module.css';\r\nimport Message from './message/message';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n\tconst { register, handleSubmit, resetField } = useForm();\r\n\r\n\tfunction onSubmit(data){\r\n\t\tprops.sendMessage(data.newText);\r\n\t\tresetField('newText');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className={s.new_message_wrapper} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={s.new_message_input}\r\n\t\t\t\t\t\t\tplaceholder={'Enter your message...'}\r\n\t\t\t\t\t\t\t{...register('newText')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button className={s.send_new_message_button} type=\"submit\">\r\n\t\t\t\t\tSend\r\n\t\t\t\t</button>\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsElements = props.dialogs.map(elem => <DialogItem id={elem.id} name={elem.name} key={elem.id}/>);\r\n\tlet messagesElements = props.messages.map(elem => <Message id={elem.id} message={elem.message} key={elem.id}/>);\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\r\n\t\t\t<div className={s.dialogs_items}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.messages_wrapper}>\r\n\t\t\t\t<div className={s.messages}>\r\n\t\t\t\t\t{messagesElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogsForm sendMessage={props.sendMessage}/>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Dialogs;","import {sendMessage} from '../../redux/dialogs_reducer';\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogs: state.dialogsPage.dialogs,\r\n\t\tmessages: state.dialogsPage.messages,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n\tsendMessage,\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"names":["props","_jsx","className","s","children","NavLink","dialogData","isActive","undefined","to","id","_jsxs","src","alt","name","message","DialogsForm","_useForm","useForm","register","handleSubmit","resetField","onSubmit","data","sendMessage","newText","_objectSpread","placeholder","type","dialogsElements","dialogs","map","elem","DialogItem","messagesElements","messages","Message","mapDispatchToProps","compose","connect","state","dialogsPage","withAuthRedirect","Dialogs"],"sourceRoot":""}